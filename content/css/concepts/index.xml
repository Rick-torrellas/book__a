<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Concepts on Book</title><link>https://rick-torrellas.github.io/book__a/content/css/concepts/</link><description>Recent content in Concepts on Book</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Wed, 28 Sep 2022 18:06:23 +0000</lastBuildDate><atom:link href="https://rick-torrellas.github.io/book__a/content/css/concepts/index.xml" rel="self" type="application/rss+xml"/><item><title>CSS Units: vh, vw, vmin, vmax</title><link>https://rick-torrellas.github.io/book__a/content/css/concepts/vh-vw-vmin-vmax/</link><pubDate>Wed, 28 Sep 2022 17:56:55 +0000</pubDate><guid>https://rick-torrellas.github.io/book__a/content/css/concepts/vh-vw-vmin-vmax/</guid><description>source
Antes de empeazar a hablar sobre el tema, es importante destacar que v viene viewport, y el viewport es el área de pantalla está disponible al renderizar un documento.
Entonces:
viewport height
viewport width
Es una medida tomada apartir del viewport del dispositivo, va a ir de 0 - 100, siendo el 100% del viewport.
La diferencia con el %, es que el % va a tomar a su elemento padre como referencia, mientras que este tomara el viewport como referencia.</description></item><item><title>Animating with CSS Transitions</title><link>https://rick-torrellas.github.io/book__a/content/css/concepts/transitions/</link><pubDate>Wed, 28 Sep 2022 17:56:11 +0000</pubDate><guid>https://rick-torrellas.github.io/book__a/content/css/concepts/transitions/</guid><description>source
La manera mas basica de animar es unando las transiciones. Las transiciones te permiten definir la transicion entre dos estados de un elemento.
En resument es el cambio del valor de las propiedades de un elemnto, entre dos estados como :hover :click, etc.
duracion La duracion de una transicion se puede medir en s segundos ms milisegundos, y puede declararse dentro de la propiedad transition o transition-duration.
Nota: es mejor usar milisegundos, aunque css soporta usar segundos y milisegundos, javascript solo soporta milisegundos.</description></item><item><title>Outline and Outline Offset</title><link>https://rick-torrellas.github.io/book__a/content/css/concepts/outline-and-outline-offset/</link><pubDate>Wed, 28 Sep 2022 17:54:19 +0000</pubDate><guid>https://rick-torrellas.github.io/book__a/content/css/concepts/outline-and-outline-offset/</guid><description>source
Es una propiedad que es muy parecida a border, viene despues de esta y la diferencia es que no se puede colocar en un solo lugar, botom, top, left or right, pero lo que si te deja es colocar el borde a cierta distancia del obejto con outline-offset (puede colocarlo por fuera tanto que por dentro, usando valores negativos).
NOTA: si usas esta propiedad para crear un efecto con :hover tendras que volver a declar la propiedad en el hover</description></item></channel></rss>