<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Book</title><link>https://rick-torrellas.github.io/book__a/content/jest/samples/</link><description>Recent content on Book</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Wed, 28 Sep 2022 19:19:15 +0000</lastBuildDate><atom:link href="https://rick-torrellas.github.io/book__a/content/jest/samples/index.xml" rel="self" type="application/rss+xml"/><item><title>Mocks Xamples</title><link>https://rick-torrellas.github.io/book__a/content/jest/samples/mocks_xamples/</link><pubDate>Wed, 28 Sep 2022 19:19:15 +0000</pubDate><guid>https://rick-torrellas.github.io/book__a/content/jest/samples/mocks_xamples/</guid><description>1 __mocks__/fs.js const fs = jest.genMockFromModule(&amp;#39;fs&amp;#39;); let __content; function __readFileContent(content) { __content = content } function readFileSync(path,options) { return __content; } fs.readFileSync = readFileSync; fs.__readFileContent = __readFileContent; module.exports = fs; __test__/file.test.js jest.mock(&amp;#39;fs&amp;#39;); const {leer} = require(&amp;#39;../vagina&amp;#39;); describe(&amp;#39;test&amp;#39;, () =&amp;gt; { const content = &amp;#39;{&amp;#34;culo&amp;#34;: 1}&amp;#39;; const content2 = &amp;#39;{&amp;#34;culo&amp;#34;: 2}&amp;#39;; beforeEach(()=&amp;gt;{ require(&amp;#39;fs&amp;#39;).__readFileContent(content); }) test(&amp;#39;truli&amp;#39;, () =&amp;gt; { expect(leer()).toEqual(content); }); }); 2 Verificar si una funcion mock se esta llamado jest.mock(&amp;#39;fs&amp;#39;); const fs = require(&amp;#39;fs&amp;#39;); const {leer} = require(&amp;#39;.</description></item></channel></rss>