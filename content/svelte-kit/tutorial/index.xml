<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorial on Book</title><link>https://rick-torrellas.github.io/book__a/content/svelte-kit/tutorial/</link><description>Recent content in Tutorial on Book</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Wed, 28 Sep 2022 19:38:59 +0000</lastBuildDate><atom:link href="https://rick-torrellas.github.io/book__a/content/svelte-kit/tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>Create Package</title><link>https://rick-torrellas.github.io/book__a/content/svelte-kit/tutorial/package/</link><pubDate>Wed, 28 Sep 2022 19:39:26 +0000</pubDate><guid>https://rick-torrellas.github.io/book__a/content/svelte-kit/tutorial/package/</guid><description>Lo primero que tienes que hacer, es crear una carpeta ‚Äúlib‚Äù, en ‚Äú/src/lib.
Recordar que se pueden usar arhivos js, para exportar un numero de componentes svelte. Tambien se puede exportar tan solo un componente svelte, para eso tendras que espesificarlo, en el siguiente paso lo explico. exportar el contenido, por defecto, si tienes un archivo index.js o svelte, dentro de lib, svelte automaticamente lo tomara, pero en caso de que no sea el caso, dentro del package.</description></item><item><title>Loaders</title><link>https://rick-torrellas.github.io/book__a/content/svelte-kit/tutorial/loaders/</link><pubDate>Wed, 28 Sep 2022 19:39:12 +0000</pubDate><guid>https://rick-torrellas.github.io/book__a/content/svelte-kit/tutorial/loaders/</guid><description>Los loaders te permiten acceder a cierta informacion y fetch data.
Hasta ahora se puede acceder a esta informacion.
url params props fetch session stuff status error url tiene informacion, justamente de la url üòÄ
Hasta la fecha estos son los valores que el objeto url contiene.
Ejemplo de url URL { href: &amp;#39;&amp;lt;http://localhost:3000/&amp;gt;&amp;#39;, origin: &amp;#39;&amp;lt;http://localhost:3000&amp;gt;&amp;#39;, protocol: &amp;#39;http:&amp;#39;, username: &amp;#39;&amp;#39;, password: &amp;#39;&amp;#39;, host: &amp;#39;localhost:3000&amp;#39;, hostname: &amp;#39;localhost&amp;#39;, port: &amp;#39;3000&amp;#39;, pathname: &amp;#39;/&amp;#39;, search: &amp;#39;&amp;#39;, searchParams: URLSearchParams {}, hash: &amp;#39;&amp;#39; } &amp;lt;script context=&amp;#34;module&amp;#34;&amp;gt; export async function load({url}) { return { props: { url }, // context: {&amp;#39;message&amp;#39;: &amp;#39;sup&amp;#39;} } } &amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; export let url; console.</description></item></channel></rss>